### Use ANSI JOIN for readability 
### public List<UserPartyDto> getAllMyParties(String userId)
userPartyDtoDao.getAllMyParties= \
	select \
		a.party_no, p.party_name, p.party_filename, \
		a.access_create_date, \
		case when f.party_no is not null then 1 \
			else 0 \
		end as favorite, \
		case when a.auth_no = 6 then 1 \
			else 0 \
		end as managing \
	from user_party_access a \
	left join user_party_favorites f \
	on a.user_id = f.user_id and a.party_no = f.party_no \
	join parties p \
	on a.party_no = p.party_no \
	where a.user_id = ? \
	and a.auth_no in (6, 7) \
	order by party_name
### public List<UserPartyDto> getAllMyFavoriteParties(String userId)
userPartyDtoDao.getAllMyFavoriteParties= \
	select \
		a.party_no, p.party_name, p.party_filename, \
		a.access_create_date, \
		case when a.auth_no = 6 then 1 \
			else 0 \
		end as managing, \
		f.display_rank \
	from user_party_access a \
	join user_party_favorites f \
	on a.user_id = f.user_id and a.party_no = f.party_no \
	join parties p \
	on a.party_no = p.party_no \
	where a.user_id = ? \
	and a.auth_no in (6, 7) \
	order by display_rank desc
### public List<UserPartyDto> getAllMyManagedParties(String userId)
userPartyDtoDao.getAllMyManagedParties= \
	select \
		a.party_no, p.party_name, p.party_filename, \
		a.access_create_date, \
		case when f.party_no is not null then 1 \
			else 0 \
		end as favorite \
	from user_party_access a \
	left join user_party_favorites f \
	on a.user_id = f.user_id and a.party_no = f.party_no \
	join parties p \
	on a.party_no = p.party_no \
	where a.user_id = ? \
	and a.auth_no = 6 \
	order by party_name
